#log_t0 = -20,
log_cv_len = log(0.01),
log_std_index = log(0.01)
)
parameters.U1 = list(
# fixed effects
log_init_Z = log(10),
log_std_log_N0 = log(10),
mean_log_R = 20,
log_std_log_R = log(10),
logit_log_R = 20,
mean_log_F = log(2),
#log_std_log_F = log(10),
logit_log_F_y = 20,
logit_log_F_a = 10,
log_vbk = log(1),
#log_Linf = log(100),
#log_t0 = 0,
log_cv_len = log(1),
log_std_index = log(1)
)
lower1=unlist(parameters.L)
upper1=unlist(parameters.U)
map1 = list(
#log_std_log_N0 = factor(NA),
#log_std_log_R = factor(NA),
log_std_log_F = factor(NA),
log_Linf=factor(NA),
log_t0=factor(NA)
#log_std_index=factor(NA)
)
obj1<-MakeADFun(tmb.data1,parameters1,random=rnames,map=map1,DLL="ACL_krill",inner.control=list(trace=F, maxit=500))
compile("ACL_krill.cpp")
dyn.load("ACL_krill")
obj1<-MakeADFun(tmb.data1,parameters1,random=rnames,map=map1,DLL="ACL_krill",inner.control=list(trace=F, maxit=500))
View(obj1)
View(obj)
View(obj1)
parameters <- custom_bounds_and_params$parameters
parameters.L <- custom_bounds_and_params$parameters.L
parameters.U <- custom_bounds_and_params$parameters.U
lower=unlist(parameters.L)
upper=unlist(parameters.U)
map <- generate_map(map)
rnames=c("dev_log_R","dev_log_F","dev_log_N0")
#
acl_cpp_dir <- dirname(acl_cpp_path)
#
acl_dll_path <- file.path(acl_cpp_dir, "ACL0.dll")
#
dyn.load(acl_dll_path)
#dyn.load("ACL")
obj<-MakeADFun(tmb.data,parameters,niyrandom=rnames,map=map,DLL="ACL0",inner.control=list(trace=F, maxit=500))
View(obj)
View(obj1)
parameters
parameters$ dev_log_N0 = rep(0,(nage-1))
parameters
# random effects
parameters$ dev_log_R = rep(0,nyear)
parameters$ dev_log_F = array(0,c(nage,nyear))
parameters$ dev_log_N0 = rep(0,(nage-1))
parameters.L <- custom_bounds_and_params$parameters.L
parameters.U <- custom_bounds_and_params$parameters.U
lower=unlist(parameters.L)
upper=unlist(parameters.U)
map <- generate_map(map)
rnames=c("dev_log_R","dev_log_F","dev_log_N0")
#
acl_cpp_dir <- dirname(acl_cpp_path)
#
acl_dll_path <- file.path(acl_cpp_dir, "ACL0.dll")
#
dyn.load(acl_dll_path)
#dyn.load("ACL")
obj<-MakeADFun(tmb.data,parameters,niyrandom=rnames,map=map,DLL="ACL0",inner.control=list(trace=F, maxit=500))
cat("\nRunning optimization with nlminb...\n")
opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,control=list(trace=0,iter.max=2000,eval.max=10000))
obj1<-MakeADFun(tmb.data1,parameters1,random=rnames,map=map1,DLL="ACL_krill",inner.control=list(trace=F, maxit=500))
opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,control=list(trace=0,iter.max=2000,eval.max=10000))
opt<-nlminb(obj1$par,obj1$fn,obj1$gr,lower=lower1,upper=upper1,control=list(trace=0,iter.max=2000,eval.max=10000))
View(tmb.data1)
View(tmb.data)
View(map1)
View(map)
View(tmb.data)
View(parameters)
View(parameters1)
View(parameters.L)
View(parameters.L1)
View(parameters.U)
View(parameters.U1)
View(obj)
View(obj1)
#dyn.load("ACL")
obj<-MakeADFun(tmb.data,parameters,random=rnames,map=map,DLL="ACL0",inner.control=list(trace=F, maxit=500))
cat("\nRunning optimization with nlminb...\n")
opt<-nlminb(obj$par,obj$fn,obj$gr,lower=lower,upper=upper,control=list(trace=0,iter.max=2000,eval.max=10000))
?niyrandom
# opt1<-nlminb(opt$par,obj$fn,obj$gr,lower=lower,upper=upper,control=list(trace=0,iter.max=2000,eval.max=10000))
obj$gr(opt$par)
cbind(opt$par,lower,upper)
dyn.unload(acl_dll_path)
library(ALSCL)
load("E:/Oceanic Fisheries Ecosystem Laboratory/krill/ACL_krill.R.RData")
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 5,M=0.3,sel_L50 = 40, sel_L95=45,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map ,len_mid =len_mid ,len_border =len_border)
View(a)
a[["final_outer_mgc"]]
sum(a[["final_outer_mgc"]])
0.0003047295
0.0003047295
mean(a[["final_outer_mgc"]])
a[["final_outer_mgc"]][length(a[["final_outer_mgc"]])-2]
a[["par_low_up"]]
a[["bound_hit"]]
library(sjPlot)
tab_df(a)
tab_df(a[["par_low_up"]])
df <- a[["par_low_up"]]
kdf<-kable(df)
library(knitr)
kdf<-kable(df)
kdf
df1<-a[["final_outer_mgc"]]
kable(df1)
a[["bound_hit"]]
a[["converge"]]
library(ALSCL)
diagnose_model(a)
a[["converge"]]
save.image("E:/Oceanic Fisheries Ecosystem Laboratory/krill/ACL_krill.R.RData")
load("E:/Oceanic Fisheries Ecosystem Laboratory/krill/ACL_krill.R.RData")
model=a
model_result=a
if(!is.list(model_result))
if(!is.list(model_result)) stop("Model output should be a list.")
if("bound_hit" %in% names(model_result)) {
if(model_result[["bound_hit"]]) {
cat("\nWarning: The model result has hit the boundaries.\n")
} else {
cat("\nThe model result has not hit the boundaries.\n")
}
} else {
cat("\nWarning: 'bound_hit' not found in the model output.\n")
}
model_result[["bound_hit"]]
if(model_result[["bound_hit"]]==FALSE) {
cat("\nWarning: The model result has hit the boundaries.\n")
} else {
cat("\nThe model result has not hit the boundaries.\n")
}
} else {
if("bound_hit" %in% names(model_result)) {
if(model_result[["bound_hit"]]==FALSE) {
cat("\nWarning: The model result has hit the boundaries.\n")
} else {
cat("\nThe model result has not hit the boundaries.\n")
}
} else {
cat("\nWarning: 'bound_hit' not found in the model output.\n")
}
# Check if the model result has hit the boundaries
if("bound_hit" %in% names(model_result)) {
if(model_result[["bound_hit"]]==TRUE) {
cat("\nWarning: The model result has hit the boundaries.\n")
} else {
cat("\n The model result has not hit the boundaries.\n")
}
} else {
cat("\nWarning: 'bound_hit' not found in the model output.\n")
}
model_result[["converge"]]
convergence <- grepl("relative convergence", model_result[["converge"]])
# Check if the model has converged
# Check model convergence
if("converge" %in% names(model)) {
convergence <- grepl("relative convergence", model_result[["converge"]])
if(convergence==TRUE) {
cat("\nThe model has converged.\n")
} else {
cat("\nWarning: The model has not converged.\n")
}
} else {
cat("\nWarning: 'converge' not found in the model output.\n")
}
library(ALSCL)
diagnose_model(a)
library(ALSCL)
diagnose_model(a)
summary(a)
View(a)
a[["report"]][["pla"]]
# 假设你的矩阵名为 pla
# 转换为数据框
pla=a[["report"]][["pla"]]
df <- as.data.frame(pla)
# 添加行名和列名（如果需要）
rownames(df) <- paste0("Length", 1:nrow(df))
colnames(df) <- paste0("Age", 1:ncol(df))
View(df)
# 转换为长格式
dfm <- melt(df)
# 绘制热图
ggplot(dfm, aes(x=Var2, y=Var1, fill=value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "steelblue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Age Group", y = "Length Group", fill = "Probability")
View(dfm)
dfm
View(df)
df$Length <- paste("Length",1:ncol(df), sep="")
# 假设你的矩阵名为 pla
# 转换为数据框
pla=a[["report"]][["pla"]]
df <- as.data.frame(pla)
# 添加行名和列名（如果需要）
colnames(df) <- paste0("Age", 1:ncol(df))
df$Length <- paste("Length",1:nrow(df), sep="")
View(df)
# 转换为长格式
dfm <- melt(df, id.vars = "Length")
View(dfm)
# 绘制热图
ggplot(dfm, aes(x=variable, y=Length, fill=value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "steelblue") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(x = "Age Group", y = "Length Group", fill = "Probability")
library(ALSCL)
plot_pla(a)
plot_pla(a,high_col = "red")
library(ALSCL)
plot_pla(a)
View(a)
# 绘制 dev_log_F 和 dev_log_R 的直方图
df2 <- data.frame(dev_log_F = a[["report"]][["dev_log_F"]],dev_log_R =  a[["report"]][["dev_log_R"]])
# 绘制 dev_log_F 和 dev_log_R 的直方图
dev_log_F = a[["report"]][["dev_log_F"]]
dev_log_R =  a[["report"]][["dev_log_R"]]
ggplot(dev_log_F, aes(x = dev_log_F)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", alpha = 0.8, color = "black") +
labs(x = "dev_log_F", y = "Frequency") +
theme_minimal()
dev_log_F<-as.data.frame(dev_log_F)
ggplot(dev_log_F, aes(x = dev_log_F)) +
geom_histogram(binwidth = 0.1, fill = "skyblue", alpha = 0.8, color = "black") +
labs(x = "dev_log_F", y = "Frequency") +
theme_minimal()
View(dev_log_F)
View(dev_log_F)
dev_log_F_melted <- melt(dev_log_F)
colnames(dev_log_F_melted) <- c("Row", "Column", "Value")
ggplot(dev_log_F_melted, aes(x = Column, y = Value, group = Row, color = factor(Row))) +
geom_line() +
labs(x = "Column", y = "Value", color = "Row") +
theme_minimal()
# 绘制 dev_log_F 和 dev_log_R 的直方图
dev_log_F = a[["report"]][["dev_log_F"]]
dev_log_F
dev_log_R
dev_log_R
df2 <- data.frame(Year = 1:21, Dev_log_R = dev_log_R)
ggplot(data = df2, aes(x = Year, y = Dev_log_R)) +
geom_line() +
labs(x = "Year", y = "Dev_log_R") +
theme_minimal()
df2 <- data.frame(Year = 1:21, Dev_log_R = exp(dev_log_R))
ggplot(data = df2, aes(x = Year, y = Dev_log_R)) +
geom_line() +
labs(x = "Year", y = "Dev_log_R") +
theme_minimal()
plot_recruitment(a)
# 假设 dev_log_F 已经存在
df <- as.data.frame(dev_log_F)
df$AgeGroup <- factor(1:5)  # 添加年龄组
melted_df <- melt(df, id.vars = "AgeGroup")  # 将宽格式转为长格式，方便ggplot使用
ggplot(data = melted_df, aes(x = variable, y = AgeGroup, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(x = "Year", y = "Age Group", fill = "Dev_log_F") +
theme_minimal()
# 假设 dev_log_F 已经存在
df <- as.data.frame(exp(dev_log_F))
df$AgeGroup <- factor(1:5)  # 添加年龄组
melted_df <- melt(df, id.vars = "AgeGroup")  # 将宽格式转为长格式，方便ggplot使用
ggplot(data = melted_df, aes(x = variable, y = AgeGroup, fill = value)) +
geom_tile() +
scale_fill_gradient(low = "white", high = "red") +
labs(x = "Year", y = "Age Group", fill = "Dev_log_F") +
theme_minimal()
a[["report"]][["cv_len"]]
a[["report"]][["CNA"]]
a[["report"]][["dev_log_N0"]]
library(ALSCL)
load("E:/Oceanic Fisheries Ecosystem Laboratory/krill/ACL_krill.R.RData")
library(ALSCL)
plot_dev_log_R(a)
dev_log_R<-model_result[["est_std"]][grep("^dev_log_R", rownames(model_result[["est_std"]])),]
View(dev_log_R)
# Make sure it's a data frame
if(!is.data.frame(dev_log_R)){
dev_log_R <- as.data.frame(dev_log_R)
}
# Add Year to the SSB data
dev_log_R$Year <-  model_result[["year"]]
View(dev_log_R)
library(ALSCL)
plot_dev_log_R(a)
library(ALSCL)
plot_dev_log_R(a)
dev_log_R<-model_result[["est_std"]][grep("^dev_log_R", rownames(model_result[["est_std"]])),]
# Make sure it's a data frame
if(!is.data.frame(dev_log_R)){
dev_log_R <- as.data.frame(dev_log_R)
}
confidence_intervals_dev_log_R <- data.frame(
estimate = dev_log_R[, "Estimate"],
lower = dev_log_R[, "Estimate"] - 1.96 * dev_log_R[, "Std. Error"],
upper = dev_log_R[, "Estimate"] + 1.96 * dev_log_R[, "Std. Error"]
)
View(confidence_intervals_dev_log_R)
# Add Year to the SSB data
confidence_intervals_dev_log_R$Year <-  model_result[["year"]]
View(dev_log_R)
plot <- ggplot2::ggplot(confidence_intervals_dev_log_R, ggplot2::aes(x = Year, y = estimate)) +
ggplot2::geom_line() +
ggplot2::labs(y = "dev_log_R", x = "Year", title = "dev_log_R Over Years") +
ggplot2::theme_minimal()
plot <- ggplot2::ggplot(confidence_intervals_dev_log_R, ggplot2::aes(x = Year, y = estimate)) +
ggplot2::geom_line(size = line_size, color = line_color, linetype = line_type) +
ggplot2::labs(y = "dev_log_R", x = "Year", title = "dev_log_R Over Years") +
ggplot2::theme_minimal()
ggplot2::ggplot(confidence_intervals_dev_log_R, ggplot2::aes(x = Year, y = estimate)) +
ggplot2::geom_line() +
ggplot2::labs(y = "dev_log_R", x = "Year", title = "dev_log_R Over Years") +
ggplot2::theme_minimal()
ggplot2::ggplot(confidence_intervals_dev_log_R, ggplot2::aes(x = Year, y = estimate)) +
ggplot2::geom_line() +
ggplot2::labs(y = "dev_log_R", x = "Year", title = "dev_log_R Over Years") +
ggplot2::theme_minimal()++ ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper), color = se_color, width = 0.1)
ggplot2::ggplot(confidence_intervals_dev_log_R, ggplot2::aes(x = Year, y = estimate)) +
ggplot2::geom_line() +
ggplot2::labs(y = "dev_log_R", x = "Year", title = "dev_log_R Over Years") +
ggplot2::theme_minimal()++ ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1)
ggplot2::ggplot(confidence_intervals_dev_log_R, ggplot2::aes(x = Year, y = estimate)) +
ggplot2::geom_line() +
ggplot2::labs(y = "dev_log_R", x = "Year", title = "dev_log_R Over Years") +
ggplot2::theme_minimal()+ ggplot2::geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1)
library(ALSCL)
plot_dev_log_R(a)
>plot_dev_log_R()
?plot_dev_log_R()
plot <- ggplot2::ggplot(confidence_intervals_dev_log_R, ggplot2::aes(x = Year, y = estimate)) +
ggplot2::geom_point() +
ggplot2::geom_line() +
ggplot2::labs(y = "dev_log_R", x = "Year", title = "dev_log_R Over Years") +
ggplot2::theme_minimal()
plot
library(ALSCL)
plot_dev_log_R(a)
library(ALSCL)
plot_deviance(a)
plot_deviance(a,point_color = "black")
plot_deviance(a,point_color = "black",log=F)
dev_log_F<-model_result[["est_std"]][grep("^dev_log_F", rownames(model_result[["est_std"]])),]
View(dev_log_F)
dev_log_F<-as.data.frame(dev_log_F)
# Calculate confidence intervals
confidence_intervals_dev_log_F <- data.frame(
estimate = dev_log_F[, "Estimate"],
lower = dev_log_F[, "Estimate"] - 1.96 * dev_log_F[, "Std. Error"],
upper = dev_log_F[, "Estimate"] + 1.96 * dev_log_F[, "Std. Error"]
)
View(confidence_intervals_dev_log_R)
View(dev_log_F)
# Calculate confidence intervals
confidence_intervals_dev_log_F <- data.frame(
estimate = dev_log_F[, "Estimate"],
lower = dev_log_F[, "Estimate"] - 1.96 * dev_log_F[, "Std. Error"],
upper = dev_log_F[, "Estimate"] + 1.96 * dev_log_F[, "Std. Error"]
)
View(confidence_intervals_dev_log_F)
# Create AgeGroup and Year columns for ss_f
dev_log_F$AgeGroup <- rep(paste0("Age group ", seq_len(nrow(dev_log_F))), times = ncol(dev_log_F))
ncol(dev_log_F)
# Create AgeGroup and Year columns for ss_f
F<- model_result[["report"]][["F"]]
dev_log_F$AgeGroup <- rep(paste0("Age group ", seq_len(nrow(F))), times = ncol(F))
View(dev_log_F)
dev_log_F$Year <- rep(Year, each = nrow(F))
dev_log_F$Year <- rep(model_result[["year"]], each = nrow(F))
View(confidence_intervals_dev_log_F)
View(dev_log_F)
confidence_intervals_f <- data.frame(
AgeGroup = dev_log_F$AgeGroup,
Year = dev_log_F$Year,
estimate = dev_log_F[, "Estimate"],
lower = dev_log_F[, "Estimate"] - 1.96 * dev_log_F[, "Std. Error"],
upper = dev_log_F[, "Estimate"] + 1.96 * dev_log_F[, "Std. Error"]
)
View(confidence_intervals_f)
confidence_intervals_dev_log_F <- data.frame(
AgeGroup = dev_log_F$AgeGroup,
Year = dev_log_F$Year,
estimate = dev_log_F[, "Estimate"],
lower = dev_log_F[, "Estimate"] - 1.96 * dev_log_F[, "Std. Error"],
upper = dev_log_F[, "Estimate"] + 1.96 * dev_log_F[, "Std. Error"]
)
View(confidence_intervals_dev_log_F)
library(ALSCL)
plot_deviance(a,type="R")
plot_deviance(a,type="F")
library(ALSCL)
plot_deviance(a,type="F")
library(ALSCL)
plot_deviance(a)
plot_deviance(a,type="R")
plot_deviance(a,type="F")
plot_deviance(a,type="F",log=F) {
plot_deviance(a,type="F",log=F)
plot_deviance(a,type="F",log=T)
plot_deviance(a,type="F",log=FALSE)
plot_fishing_mortality(a)
p1=plot_deviance(a,type="F",log=FALSE)
p2=plot_fishing_mortality(a)
p1+p2
library(patchwork)
p1/p2
p1=plot_recruitment(a)
plot_deviance(a,type="R")
p2=plot_deviance(a,type="R")
p1/p2
p2=plot_deviance(a,type="R",log=FALSE)
p1/p2
p2=plot_deviance(a,type="R",log=FALSE,se=F)
p2=plot_deviance(a,type="R",log=FALSE,se=FALSE)
p1/p2
diagnose_model(a)
library(ALSCL)
diagnose_model(a)
View(a)
curve(mat_func(40,45,x),0,60)
plot_VB(a)
plot_VB(a)
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600)
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 10,height=10)
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=4)
plot_abundance(a,type="N")
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=4)
plot_abundance(a,type="NA")
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
plot_abundance(a,type="NL")
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
plot_biomass(a,type="B")
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
plot_biomass(a,type="BL")
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
plot_catch(a,type=CN)
plot_catch(a,type="CN")
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
plot_catch(a,type="CNA
")
plot_catch(a,type="CNA")
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
plot_recruitment()
plot_recruitment(a)
ggsave(filename = "E:\\Oceanic Fisheries Ecosystem Laboratory\\krill\\figure\\figure1.png",dpi=600,units = "in",width = 6,height=6)
plot_pla(a)
plot_residuals(a,type="length")
plot_residuals(a,type="year")
diagnose_model(a)
plot_deviance(a,type="R")
plot_deviance(a,type="R",log=FALSE)
p1=plot_deviance(a,type="R",log=FALSE)
p2=plot_recruitment(a)
p1/p2
p1=plot_deviance(a,type="R",log=FALSE,se=F)
p1=plot_deviance(a,type="R",log=FALSE,se=FALSE)
p1/p2
p1=plot_deviance(a,type="F",log=FALSE,se=FALSE)
p1
plot_SSB_Rec(a)
plot_SSB(a)
View(a)
View(a)
elog<-a[["report"]][["Elog_index"]]
elog
Elog_index <- model_result[["report"]][["Elog_index"]]
# Make sure it's a matrix
if(!is.matrix(Elog_index)){
Elog_index <- as.matrix(Elog_index)
}
Year <-model_result[["year"]]
# Create LengthGroup variable from row names of Elog_index
LengthGroup <- paste0("Length bin ", seq_len(nrow(Elog_index)))
LengthGroup <- factor(paste("Length bin ", seq_len(nrow(Elog_index))), levels=paste("Length bin ", seq_len(nrow(Elog_index))))
# Convert matrix to data frame in long format
Elog_index_long <- reshape2::melt(Elog_index)
colnames(Elog_index_long) <- c("LengthGroup", "Year", "Count")
Elog_index_long$Year <- Year[match(Elog_index_long$Year, 1:length(Year))]
Elog_index_long$LengthGroup <- LengthGroup[as.numeric(Elog_index_long$LengthGroup)]
View(Elog_index_long)
View(a)
a[["len_mid"]]
View(cl)
plot_VB(a)
load("E:/Oceanic Fisheries Ecosystem Laboratory/krill/ACL_krill.R.RData")
library(ALSCL)
