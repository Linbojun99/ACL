# 先获取完整数据模型的结果
model_result <- run_acl(data.CatL = data.CatL,
data.wgt = data.wgt,
data.mat = data.mat,
rec.age, nage, M, sel_L50, sel_L95,
parameters, parameters.L, parameters.U, map, len_mid, len_border)
# 提取完整的年份数据
year <- model_result[["year"]]
# 提取完整的B，SSB，Rec和N数据
variables <- list(
B = model_result[["report"]][["B"]],
Rec = model_result[["report"]][["Rec"]],
SSB = model_result[["report"]][["SSB"]],
N = model_result[["report"]][["N"]]
)
# 将完整的结果保存到data.frame中
for (variable_name in names(variables)) {
temp_full <- data.frame(Year = year,
Variable = rep(variable_name, each = length(year)),
Value = variables[[variable_name]],
RetrospectiveYear = rep(tail(year, 1), length(year)),
Rho = rep(NA, length(year)))  # Rho值对于完整数据集为NA
results <- rbind(results, temp_full)
}
for (i in 1:(nyear)) {
# 计算需要的年份数据
year1 = ncol(data.CatL) - i
# 运行ACL模型
model_result <- run_acl(data.CatL = data.CatL[ , 1:year1],
data.wgt = data.wgt[ , 1:year1],
data.mat = data.mat[ , 1:year1],
rec.age, nage, M, sel_L50, sel_L95,
parameters, parameters.L, parameters.U, map, len_mid, len_border)
year2 <- model_result[["year"]]
# 提取最后一年的参数值
variables <- list(
B = model_result[["report"]][["B"]],
Rec = model_result[["report"]][["Rec"]],
SSB = model_result[["report"]][["SSB"]],
N = model_result[["report"]][["N"]]
)
# 提取回溯性分析的年份
retrospectiveYear <- tail(model_result[["year"]], 1)
# 对于每个变量，计算rho值并将结果保存到data.frame中
for (variable_name in names(variables)) {
# 提取与回溯数据相同年份的原始数据
original_values <- results[results$Year %in% year2 & results$Variable == variable_name, "Value"]
# 计算rho值
if(length(variables[[variable_name]]) != length(original_values)){
stop("Vectors are not of the same length.")
} else {
rho <- cor(variables[[variable_name]], original_values)
}
# 将结果保存到data.frame中
temp <- data.frame(Year = year2,
Variable = rep(variable_name, each = length(year2)),
Value = variables[[variable_name]],
RetrospectiveYear = rep(retrospectiveYear, length(year2)),
Rho = rep(rho, length(year2)))
results <- rbind(results, temp)
}
}
return(results)
}
b<-retrospective_analysis(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border)
View(b)
View(b)
View(b)
retrospective_analysis <- function(nyear, data.CatL, data.wgt, data.mat, rec.age, nage, M, sel_L50, sel_L95,
parameters = NULL, parameters.L = NULL, parameters.U = NULL,
map = NULL, len_mid = NULL, len_border = NULL,plot=T) {
results <- data.frame(Year = integer(), Variable = character(), Value = numeric(), RetrospectiveYear = integer(), Rho = numeric())
# 先获取完整数据模型的结果
model_result <- run_acl(data.CatL = data.CatL,
data.wgt = data.wgt,
data.mat = data.mat,
rec.age, nage, M, sel_L50, sel_L95,
parameters, parameters.L, parameters.U, map, len_mid, len_border)
# 提取完整的年份数据
year <- model_result[["year"]]
# 提取完整的B，SSB，Rec和N数据
variables <- list(
B = model_result[["report"]][["B"]],
Rec = model_result[["report"]][["Rec"]],
SSB = model_result[["report"]][["SSB"]],
N = model_result[["report"]][["N"]]
)
# 将完整的结果保存到data.frame中
for (variable_name in names(variables)) {
temp_full <- data.frame(Year = year,
Variable = rep(variable_name, each = length(year)),
Value = variables[[variable_name]],
RetrospectiveYear = rep(tail(year, 1), length(year)),
Rho = rep(NA, length(year)))  # Rho值对于完整数据集为NA
results <- rbind(results, temp_full)
}
for (i in 1:(nyear)) {
# 计算需要的年份数据
year1 = ncol(data.CatL) - i
# 运行ACL模型
model_result <- run_acl(data.CatL = data.CatL[ , 1:year1],
data.wgt = data.wgt[ , 1:year1],
data.mat = data.mat[ , 1:year1],
rec.age, nage, M, sel_L50, sel_L95,
parameters, parameters.L, parameters.U, map, len_mid, len_border)
year2 <- model_result[["year"]]
# 提取最后一年的参数值
variables <- list(
B = model_result[["report"]][["B"]],
Rec = model_result[["report"]][["Rec"]],
SSB = model_result[["report"]][["SSB"]],
N = model_result[["report"]][["N"]]
)
# 提取回溯性分析的年份
retrospectiveYear <- tail(model_result[["year"]], 1)
# 对于每个变量，计算rho值并将结果保存到data.frame中
for (variable_name in names(variables)) {
# 提取与回溯数据相同年份的原始数据
original_values <- results[results$Year %in% year2 & results$Variable == variable_name, "Value"]
# 计算rho值
if(length(variables[[variable_name]]) != length(original_values)){
stop("Vectors are not of the same length.")
} else {
rho <- cor(variables[[variable_name]], original_values)
}
# 将结果保存到data.frame中
temp <- data.frame(Year = year2,
Variable = rep(variable_name, each = length(year2)),
Value = variables[[variable_name]],
RetrospectiveYear = rep(retrospectiveYear, length(year2)),
Rho = rep(rho, length(year2)))
results <- rbind(results, temp)
}
}
# If plot is TRUE, create and return a ggplot object
if (plot) {
# Define plot
p <- ggplot(results, aes(x = Year, y = Value, color = as.factor(RetrospectiveYear))) +
geom_line() +
facet_wrap(~Variable, scales = "free") +
theme_minimal() +
theme(legend.position = "bottom") +
labs(x = "Year", y = "Value", color = "Retrospective Year")
# Add rho values as text at the end of each time series
last_years <- results %>%
group_by(Variable, RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
ungroup()
p <- p + geom_text(data = last_years, aes(label = paste0("rho = ", round(Rho, 2))),
nudge_y = 0.05 * sd(results$Value, na.rm = TRUE),
hjust = 0,
check_overlap = TRUE)
return(p)
}
return(results)
}
b<-retrospective_analysis(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
library(ACL)
b<-retrospective_analysis(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
View(b)
View(b)
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
View(b)
View(b)
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
View(b)
b$plot
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
library(ACL)
b
View(b)
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
model_result
year2 <- model_result[["year"]]
# 提取最后一年的参数值
variables <- list(
B = model_result[["report"]][["B"]],
Rec = model_result[["report"]][["Rec"]],
SSB = model_result[["report"]][["SSB"]],
N = model_result[["report"]][["N"]]
)
# 提取回溯性分析的年份
retrospectiveYear <- tail(model_result[["year"]], 1)
# 对于每个变量，计算rho值并将结果保存到data.frame中
for (variable_name in names(variables)) {
# 提取与回溯数据相同年份的原始数据
original_values <- results[results$Year %in% year2 & results$Variable == variable_name, "Value"]
# 计算rho值
if(length(variables[[variable_name]]) != length(original_values)){
stop("Vectors are not of the same length.")
} else {
rho <- cor(variables[[variable_name]], original_values)
}
# 将结果保存到data.frame中
temp <- data.frame(Year = year2,
Variable = rep(variable_name, each = length(year2)),
Value = variables[[variable_name]],
RetrospectiveYear = rep(retrospectiveYear, length(year2)),
Rho = rep(rho, length(year2)))
results <- rbind(results, temp)
}
results$RetrospectiveYear <- factor(results$RetrospectiveYear, levels = sort(unique(results$RetrospectiveYear), decreasing = TRUE))
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = min(Year)) %>%  # Add Year column
ungroup()
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(Year == min(Year)) %>%
summarise(Rho = first(Rho), Year = min(Year)) %>%  # Add Year column
ungroup()
View(rho_text)
View(results)
# 运行ACL模型
model_result <- run_acl(data.CatL = data.CatL[ , 1:year1],
data.wgt = data.wgt[ , 1:year1],
data.mat = data.mat[ , 1:year1],
rec.age, nage, M, sel_L50, sel_L95,
parameters, parameters.L, parameters.U, map, len_mid, len_border)
year2 <- model_result[["year"]]
# 提取最后一年的参数值
variables <- list(
B = model_result[["report"]][["B"]],
Rec = model_result[["report"]][["Rec"]],
SSB = model_result[["report"]][["SSB"]],
N = model_result[["report"]][["N"]]
)
# 提取回溯性分析的年份
retrospectiveYear <- tail(model_result[["year"]], 1)
# 对于每个变量，计算rho值并将结果保存到data.frame中
for (variable_name in names(variables)) {
# 提取与回溯数据相同年份的原始数据
original_values <- results[results$Year %in% year2 & results$Variable == variable_name, "Value"]
# 计算rho值
if(length(variables[[variable_name]]) != length(original_values)){
stop("Vectors are not of the same length.")
} else {
rho <- cor(variables[[variable_name]], original_values)
}
# 将结果保存到data.frame中
temp <- data.frame(Year = year2,
Variable = rep(variable_name, each = length(year2)),
Value = variables[[variable_name]],
RetrospectiveYear = rep(retrospectiveYear, length(year2)),
Rho = rep(rho, length(year2)))
results <- rbind(results, temp)
}
results$RetrospectiveYear <- factor(results$RetrospectiveYear, levels = sort(unique(results$RetrospectiveYear), decreasing = TRUE))
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = min(Year)) %>%  # Add Year column
ungroup()
View(rho_text)
View(results)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = min(Year)) %>%  # Add Year column
ungroup()
View(results)
View(rho_text)
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
View(rho_text)
View(results)
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = min(Year) + (max(Year) - min(Year)) / 4) %>%  # Add Year column
ungroup()
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
summarise(Rho = first(Rho), Year = min(Year) + (max(Year) - min(Year)) / 4) %>%  # Add Year column
filter(Year == max(Year)) %>%
ungroup()
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear)
View(rho_text)
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = min(Year) + (max(Year) - min(Year)) / 4) %>%  # Add Year column
filter(Year == max(Year)) %>%
ungroup()
View(results)
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(Year1 == max(Year)) %>%
#filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = min(Year) + (max(Year) - min(Year)) / 4) %>%  # Add Year column
ungroup()
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(Year1 == max(Year))
# Calculate the position of x axis where we want to place the text
xpos <- min(results$Year) + (max(results$Year) - min(results$Year)) / 4
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable, RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
View(rho_text)
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable, RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
filter(Year == min(Year)) %>%
ungroup()
View(rho_text)
rho_text <- results %>%
group_by(Variable, RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
filter(Year == min(Year)) %>%
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable, RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
filter(RetrospectiveYear == min(RetrospectiveYear)) %>%
ungroup()
View(rho_text)
rho_text <- results %>%
filter(RetrospectiveYear == min(RetrospectiveYear)) %>%
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(RetrospectiveYear)) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.nummeric(RetrospectiveYear))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
as.nummeric(RetrospectiveYear)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(results$RetrospectiveYear))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
results$RetrospectiveYear
as.numeric(results$RetrospectiveYear)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.integer(results$RetrospectiveYear))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable, RetrospectiveYear) %>%
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear, na.rm = TRUE))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear, na.rm = TRUE))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,,na.rm = TRUE)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear, na.rm = TRUE))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,na.rm = TRUE)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
View(results)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear, na.rm = TRUE))) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,na.rm = TRUE)) %>%
summarise(Rho = first(Rho, na.rm = TRUE), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear), na.rm = TRUE)) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,na.rm = TRUE)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
as.numeric(RetrospectiveYear)
rho_text <- results %>%
group_by(Variable)
View(rho_text)
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear), na.rm = TRUE))
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear), na.rm = TRUE)) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,na.rm = TRUE)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear), na.rm = TRUE))
View(rho_text)
rho_text <- results %>%
group_by(Variable,RetrospectiveYear)
View(rho_text)
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(RetrospectiveYear == min(as.numeric(RetrospectiveYear)))
View(rho_text)
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(Year == max(Year,na.rm = TRUE))
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(RetrospectiveYear == min(as.numericas.character(RetrospectiveYear), na.rm = TRUE)) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,na.rm = TRUE)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable,RetrospectiveYear) %>%
filter(RetrospectiveYear == min(as.numeric(as.character(RetrospectiveYear)), na.rm = TRUE)) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,na.rm = TRUE)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
View(rho_text)
# Only display rho value of the last retrospective year for each Variable
rho_text <- results %>%
group_by(Variable) %>%
filter(RetrospectiveYear == min(as.numeric(as.character(RetrospectiveYear)), na.rm = TRUE)) %>%  # Only keep the smallest RetrospectiveYear
filter(Year == max(Year,na.rm = TRUE)) %>%
summarise(Rho = first(Rho), Year = xpos) %>%  # Add Year column
ungroup()
View(rho_text)
library(ACL)
b<-retro_acl(1,data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border,plot=T)
b
library(ACL)
