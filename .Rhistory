# Check output parameters
if(plot){
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
png(filename="output/plot_abundance_NA.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "NA", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
png(filename="output/plot_abundance_NL.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "NL", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
}
plot=TRUE
# Check output parameters
if(plot){
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
png(filename="output/plot_abundance_NA.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "NA", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
png(filename="output/plot_abundance_NL.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "NL", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
}
# Check output parameters
if(plot){
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
}
if(plot){
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
}
if(plot==TRUE){
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
}
if(plot==TRUE){
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
}
dir()
if(plot==TRUE){
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
}
if(p==TRUE){
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
}
p==T
p=TRUE
if(p=TRUE){
if(p==TRUE){
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
}
if (!dir.exists("output"))
{
dir.create("output")
if (!dir.exists("output")) {
stop("Failed to create output directory.")
}
}
# Save the image in the output folder
png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
dev.off()
png(filename="output/plot_abundance_NA.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "NA", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
png(filename="output/plot_abundance_NL.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "NL", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
library(ACL)
png(filename="output/plot_biomass_B.png",width = 16, height = 9, units = "in", res = 600)
plot_biomass(model_result=results_list, type = "B", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
png(filename="output/plot_biomass_BL.png",width = 16, height = 9, units = "in", res = 600)
plot_biomass(model_result=results_list, type = "BL", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
View(results_list)
results_list[["est_std"]]
e<-results_list[["est_std"]]
View(e)
png(filename="output/plot_catch_CN.png",width = 16, height = 9, units = "in", res = 600)
plot_catch(model_result=results_list, type = "CN", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
dev.off()
png(filename="output/plot_biomass_CNA.png",width = 16, height = 9, units = "in", res = 600)
plot_catch(model_result=results_list, type = "CNA", line_size = 1.2, line_color = "red", line_type = "solid",facet_ncol = NULL)
dev.off()
png(filename="output/plot_catch_CNA.png",width = 16, height = 9, units = "in", res = 600)
plot_catch(model_result=results_list, type = "CNA", line_size = 1.2, line_color = "red", line_type = "solid",facet_ncol = NULL)
dev.off()
plot_catch(model_result=results_list, type = "CNA", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
png(filename="output/plot_CatL_length.png",width = 16, height = 9, units = "in", res = 600)
plot_CatL(model_result=results_list,type = "length", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
plot_CatL(model_result=results_list,type = "length", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
plot_CatL(model_result=results_list,type = "length", line_size = 1.2, line_color = "red", line_type = "solid",facet_ncol = NULL)
dev.off()
png(filename="output/plot_CatL_length.png",width = 16, height = 9, units = "in", res = 600)
plot_CatL(model_result=results_list,type = "length", line_size = 1.2, line_color = "red", line_type = "solid",facet_ncol = NULL)
dev.off()
plot_CatL(model_result=results_list,type = "length", line_size = 1.2, line_color = "red", line_type = "solid",facet_ncol = NULL)
dev.off()
plot_CatL(model_result=results_list,type = "length",facet_ncol = NULL)
dev.off()
dev.off()
plot_CatL(model_result=results_list,type = "length")
plot_catch(model_result=results_list, type = "CNA", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
plot_CatL(model_result=results_list,type = "length")
plot_CatL(model_result=results_list,type = "length",exp_transform = TRUE)
plot_CatL(model_result=results_list,type = "year")
plot_CatL(model_result=results_list,type = "length")
View(results_list)
library(ACL)
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border)
setwd("E:\\Oceanic Fisheries Ecosystem Laboratory\\krill")
cl<-read.table("CatL-1mm-all.csv",header=T,sep=",")
wgt<-read.table("wgt-1mm-all.csv",header=T,sep=",")
mat<-read.table("mat-1mm-all.csv",header=T,sep=",")
age=c(1:7)
Y=21
A=7
L=49
rec.age = 1
nage= 7
M=0
sel_L50 = 27
sel_L95=36
len_border=c(12:60)
parameters = list(
log_init_Z = 0.5,
log_std_log_N0 = log(1),
mean_log_R = 5,
log_std_log_R = log(1),
logit_log_R = log(0.01/0.99),
mean_log_F = log(0.3),
log_std_log_F = log(1),
logit_log_F_y = log(0.75/0.25),
logit_log_F_a = log(0.75/0.25),
log_vbk = log(0.3),
log_Linf = log(60),
log_t0 = log(1/60),
log_cv_len = log(0.3),
log_std_index = log(0.1),
# random effects
dev_log_R = rep(0,Y),
dev_log_F = array(0,c(A,Y)),
dev_log_N0 = rep(0,(A-1))
)
parameters.L = list(
# fixed effects
log_init_Z = log(0.01),
log_std_log_N0 = -Inf,
mean_log_R = log(10),
log_std_log_R = log(0.01),
logit_log_R = -30,
mean_log_F = log(0.01),
#log_std_log_F = log(0.01),
logit_log_F_y = -10,
logit_log_F_a = -10,
log_vbk = log(0.1),
log_Linf = log(40),
#log_t0 = -20,
log_cv_len = log(0.01),
log_std_index = log(0.01)
)
parameters.U = list(
# fixed effects
log_init_Z = log(10),
log_std_log_N0 = log(10),
mean_log_R = 20,
log_std_log_R = log(10),
logit_log_R = 20,
mean_log_F = log(2),
#log_std_log_F = log(10),
logit_log_F_y = 20,
logit_log_F_a = 10,
log_vbk = log(1),
log_Linf = log(70),
#log_t0 = 0,
log_cv_len = log(1),
log_std_index = log(1)
)
lower=unlist(parameters.L)
upper=unlist(parameters.U)
map = list(
#log_std_log_N0 = factor(NA),
#log_std_log_R = factor(NA),
log_std_log_F = factor(NA),
#logit_log_F_y = factor(NA),
#logit_log_F_a = factor(NA),
#log_Linf=factor(NA),
log_t0=factor(NA)
#log_std_index=factor(NA)
)
rnames=c("dev_log_R","dev_log_F","dev_log_N0")
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border)
setwd("E:\\Oceanic Fisheries Ecosystem Laboratory\\krill")
cl<-read.table("CatL-1mm-all.csv",header=T,sep=",")
wgt<-read.table("wgt-1mm-all.csv",header=T,sep=",")
mat<-read.table("mat-1mm-all.csv",header=T,sep=",")
age=c(1:7)
Y=21
A=7
L=49
rec.age = 1
nage= 7
M=0
sel_L50 = 27
sel_L95=36
len_border=c(12:60)
parameters = list(
log_init_Z = 0.5,
log_std_log_N0 = log(1),
mean_log_R = 5,
log_std_log_R = log(1),
logit_log_R = log(0.01/0.99),
mean_log_F = log(0.3),
log_std_log_F = log(1),
logit_log_F_y = log(0.75/0.25),
logit_log_F_a = log(0.75/0.25),
log_vbk = log(0.3),
log_Linf = log(60),
log_t0 = log(1/60),
log_cv_len = log(0.3),
log_std_index = log(0.1),
# random effects
dev_log_R = rep(0,Y),
dev_log_F = array(0,c(A,Y)),
dev_log_N0 = rep(0,(A-1))
)
parameters.L = list(
# fixed effects
log_init_Z = log(0.01),
log_std_log_N0 = -Inf,
mean_log_R = log(10),
log_std_log_R = log(0.01),
logit_log_R = -30,
mean_log_F = log(0.01),
#log_std_log_F = log(0.01),
logit_log_F_y = -10,
logit_log_F_a = -10,
log_vbk = log(0.1),
log_Linf = log(40),
#log_t0 = -20,
log_cv_len = log(0.01),
log_std_index = log(0.01)
)
parameters.U = list(
# fixed effects
log_init_Z = log(10),
log_std_log_N0 = log(10),
mean_log_R = 20,
log_std_log_R = log(10),
logit_log_R = 20,
mean_log_F = log(2),
#log_std_log_F = log(10),
logit_log_F_y = 20,
logit_log_F_a = 10,
log_vbk = log(1),
log_Linf = log(70),
#log_t0 = 0,
log_cv_len = log(1),
log_std_index = log(1)
)
lower=unlist(parameters.L)
upper=unlist(parameters.U)
map = list(
#log_std_log_N0 = factor(NA),
#log_std_log_R = factor(NA),
log_std_log_F = factor(NA),
#logit_log_F_y = factor(NA),
#logit_log_F_a = factor(NA),
#log_Linf=factor(NA),
log_t0=factor(NA)
#log_std_index=factor(NA)
)
rnames=c("dev_log_R","dev_log_F","dev_log_N0")
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border)
library(ACL)
setwd("E:\\Oceanic Fisheries Ecosystem Laboratory\\krill")
cl<-read.table("CatL-1mm-all.csv",header=T,sep=",")
wgt<-read.table("wgt-1mm-all.csv",header=T,sep=",")
mat<-read.table("mat-1mm-all.csv",header=T,sep=",")
age=c(1:7)
Y=21
A=7
L=49
rec.age = 1
nage= 7
M=0
sel_L50 = 27
sel_L95=36
len_border=c(12:60)
parameters = list(
log_init_Z = 0.5,
log_std_log_N0 = log(1),
mean_log_R = 5,
log_std_log_R = log(1),
logit_log_R = log(0.01/0.99),
mean_log_F = log(0.3),
log_std_log_F = log(1),
logit_log_F_y = log(0.75/0.25),
logit_log_F_a = log(0.75/0.25),
log_vbk = log(0.3),
log_Linf = log(60),
log_t0 = log(1/60),
log_cv_len = log(0.3),
log_std_index = log(0.1),
# random effects
dev_log_R = rep(0,Y),
dev_log_F = array(0,c(A,Y)),
dev_log_N0 = rep(0,(A-1))
)
parameters.L = list(
# fixed effects
log_init_Z = log(0.01),
log_std_log_N0 = -Inf,
mean_log_R = log(10),
log_std_log_R = log(0.01),
logit_log_R = -30,
mean_log_F = log(0.01),
#log_std_log_F = log(0.01),
logit_log_F_y = -10,
logit_log_F_a = -10,
log_vbk = log(0.1),
log_Linf = log(40),
#log_t0 = -20,
log_cv_len = log(0.01),
log_std_index = log(0.01)
)
parameters.U = list(
# fixed effects
log_init_Z = log(10),
log_std_log_N0 = log(10),
mean_log_R = 20,
log_std_log_R = log(10),
logit_log_R = 20,
mean_log_F = log(2),
#log_std_log_F = log(10),
logit_log_F_y = 20,
logit_log_F_a = 10,
log_vbk = log(1),
log_Linf = log(70),
#log_t0 = 0,
log_cv_len = log(1),
log_std_index = log(1)
)
lower=unlist(parameters.L)
upper=unlist(parameters.U)
map = list(
#log_std_log_N0 = factor(NA),
#log_std_log_R = factor(NA),
log_std_log_F = factor(NA),
#logit_log_F_y = factor(NA),
#logit_log_F_a = factor(NA),
#log_Linf=factor(NA),
log_t0=factor(NA)
#log_std_index=factor(NA)
)
rnames=c("dev_log_R","dev_log_F","dev_log_N0")
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border)
# Save the image in the output folder
#png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=results_list, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
# Save the image in the output folder
#png(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", res = 600)
plot_abundance(model_result=a, type = "N", line_size = 1.2, line_color = "red", se=T,line_type = "solid")
ggsave(filename="output/plot_abundance_N.png",width = 16, height = 9, units = "in", dpi = 600)
library(ACL)
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border
)
library(ACL)
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border
)
plot_CatL(model_result=results_list,type = "year")
plot_CatL(model_result=a,type = "year")
plot_CatL(model_result=a,type = "year",exp_transform = T)
library(ACL)
plot_CatL(a,,type = "length")
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border
)
plot_deviance(model_result=a,type="R")
plot_deviance(model_result=results_list,type="R",log=F)
plot_deviance(model_result=a,type="R",log=for (variable in vector) {
})
plot_deviance(model_result=a,type="R",log=F)
plot_fishing_mortality(a)
F<- model_result[["report"]][["F"]]
model_result=a
F<- model_result[["report"]][["F"]]
View(`F`)
plot_recruitment(model_result=a, line_size = 1.2, line_color = "red", line_type = "solid",se=T,)
plot_SSB(model_result=a,type="SSB", line_size = 1.2, line_color = "red", line_type = "solid",se=T,facet_ncol = NULL)
library(ACL)
a=run_acl(data.Cat=cl,data.wgt=wgt,data.mat=mat,rec.age = 1,nage= 7,M=0,sel_L50 = 27, sel_L95=36,parameters =parameters,parameters.L=parameters.L,parameters.U=parameters.U,map =map,len_border =len_border
)
model_result=a
logN_at_len <- model_result[["obj"]][["env"]][[".data"]][["logN_at_len"]]
len_mid <- model_result[["len_mid"]]
year <- model_result[["year"]]
# Transform the matrices into data frames and add column names
df_observed <- as.data.frame(logN_at_len)
colnames(df_observed) <- year
df_observed$len_mid <- len_mid
# Define the data
Elog_index <- model_result[["report"]][["Elog_index"]]
# Transform the matrices into data frames and add column names
df_observed <- as.data.frame(logN_at_len)
colnames(df_observed) <- year
df_observed$len_mid <- len_mid
df_estimated <- as.data.frame(Elog_index)
colnames(df_estimated) <- year
df_estimated$len_mid <- len_mid
# Reshape the data from wide to long format
df_observed_long <- df_observed %>%
tidyr::pivot_longer(-len_mid, names_to = "year", values_to = "Abundance")
df_estimated_long <- df_estimated %>%
tidyr::pivot_longer(-len_mid, names_to = "year", values_to = "Abundance")
# Apply the transformation function to 'Abundance' column
df_observed_long$Abundance <- exp(df_observed_long$Abundance)
df_estimated_long$Abundance <- exp(df_estimated_long$Abundance)
# Plot the data using ggplot2 with ggridges
p_observed <- ggplot2::ggplot(df_observed_long, aes(x = len_mid, y = as.factor(year), height = Abundance, fill = as.factor(year))) +
ggridges::geom_density_ridges(stat = "identity", alpha = ridges_alpha) +
ggplot2::scale_fill_discrete(name = "Year", guide = NULL) +
ggplot2::labs(x = "Body Length", y = "Year", title = "Observed Catch-at-Length Over Years") +
ggplot2::theme_minimal()
ridges_alpha=0.8
# Plot the data using ggplot2 with ggridges
p_observed <- ggplot2::ggplot(df_observed_long, aes(x = len_mid, y = as.factor(year), height = Abundance, fill = as.factor(year))) +
ggridges::geom_density_ridges(stat = "identity", alpha = ridges_alpha) +
ggplot2::scale_fill_discrete(name = "Year", guide = NULL) +
ggplot2::labs(x = "Body Length", y = "Year", title = "Observed Catch-at-Length Over Years") +
ggplot2::theme_minimal()
p_estimated <- ggplot2::ggplot(df_estimated_long, aes(x = len_mid, y = as.factor(year), height = Abundance, fill = as.factor(year))) +
ggridges::geom_density_ridges(stat = "identity", alpha = ridges_alpha) +
ggplot2::scale_fill_discrete(name = "Year", guide = NULL) +
ggplot2::labs(x = "Body Length", y = "Year", title = "Estimated Catch-at-Length Over Years") +
ggplot2::theme_minimal()
p<- gridExtra::grid.arrange(p_observed,p_estimated, ncol = 2)
p
plot_ridges(a)
library(ACL)
